// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: libra/v1/leaderboard.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LeaderboardSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries    []*ChartEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	OnlyAdd    bool          `protobuf:"varint,4,opt,name=only_add,json=onlyAdd,proto3" json:"only_add,omitempty"`
	OnlyUpdate bool          `protobuf:"varint,5,opt,name=only_update,json=onlyUpdate,proto3" json:"only_update,omitempty"`
	IncrBy     bool          `protobuf:"varint,6,opt,name=incr_by,json=incrBy,proto3" json:"incr_by,omitempty"`
	Options    *ChartOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	Key        *ChartKey     `protobuf:"bytes,11,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LeaderboardSetRequest) Reset() {
	*x = LeaderboardSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardSetRequest) ProtoMessage() {}

func (x *LeaderboardSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardSetRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardSetRequest) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{0}
}

func (x *LeaderboardSetRequest) GetEntries() []*ChartEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *LeaderboardSetRequest) GetOnlyAdd() bool {
	if x != nil {
		return x.OnlyAdd
	}
	return false
}

func (x *LeaderboardSetRequest) GetOnlyUpdate() bool {
	if x != nil {
		return x.OnlyUpdate
	}
	return false
}

func (x *LeaderboardSetRequest) GetIncrBy() bool {
	if x != nil {
		return x.IncrBy
	}
	return false
}

func (x *LeaderboardSetRequest) GetOptions() *ChartOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LeaderboardSetRequest) GetKey() *ChartKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type LeaderboardSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ChartEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *LeaderboardSetResponse) Reset() {
	*x = LeaderboardSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardSetResponse) ProtoMessage() {}

func (x *LeaderboardSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardSetResponse.ProtoReflect.Descriptor instead.
func (*LeaderboardSetResponse) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{1}
}

func (x *LeaderboardSetResponse) GetEntries() []*ChartEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type LeaderboardSetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ChartEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Options *ChartOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	Key     *ChartKey     `protobuf:"bytes,11,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LeaderboardSetInfoRequest) Reset() {
	*x = LeaderboardSetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardSetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardSetInfoRequest) ProtoMessage() {}

func (x *LeaderboardSetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardSetInfoRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardSetInfoRequest) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{2}
}

func (x *LeaderboardSetInfoRequest) GetEntries() []*ChartEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *LeaderboardSetInfoRequest) GetOptions() *ChartOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LeaderboardSetInfoRequest) GetKey() *ChartKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type LeaderboardSetInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaderboardSetInfoResponse) Reset() {
	*x = LeaderboardSetInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardSetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardSetInfoResponse) ProtoMessage() {}

func (x *LeaderboardSetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardSetInfoResponse.ProtoReflect.Descriptor instead.
func (*LeaderboardSetInfoResponse) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{3}
}

type LeaderboardGetByRankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset  int32         `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Count   int32         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Options *ChartOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	Key     *ChartKey     `protobuf:"bytes,11,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LeaderboardGetByRankRequest) Reset() {
	*x = LeaderboardGetByRankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardGetByRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardGetByRankRequest) ProtoMessage() {}

func (x *LeaderboardGetByRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardGetByRankRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardGetByRankRequest) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{4}
}

func (x *LeaderboardGetByRankRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LeaderboardGetByRankRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LeaderboardGetByRankRequest) GetOptions() *ChartOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LeaderboardGetByRankRequest) GetKey() *ChartKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type LeaderboardGetByRankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ChartEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *LeaderboardGetByRankResponse) Reset() {
	*x = LeaderboardGetByRankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardGetByRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardGetByRankResponse) ProtoMessage() {}

func (x *LeaderboardGetByRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardGetByRankResponse.ProtoReflect.Descriptor instead.
func (*LeaderboardGetByRankResponse) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{5}
}

func (x *LeaderboardGetByRankResponse) GetEntries() []*ChartEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type LeaderboardGetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids     []string      `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Options *ChartOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	Key     *ChartKey     `protobuf:"bytes,11,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LeaderboardGetByIdRequest) Reset() {
	*x = LeaderboardGetByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardGetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardGetByIdRequest) ProtoMessage() {}

func (x *LeaderboardGetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardGetByIdRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardGetByIdRequest) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{6}
}

func (x *LeaderboardGetByIdRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *LeaderboardGetByIdRequest) GetOptions() *ChartOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LeaderboardGetByIdRequest) GetKey() *ChartKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type LeaderboardGetByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ChartEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *LeaderboardGetByIdResponse) Reset() {
	*x = LeaderboardGetByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardGetByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardGetByIdResponse) ProtoMessage() {}

func (x *LeaderboardGetByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardGetByIdResponse.ProtoReflect.Descriptor instead.
func (*LeaderboardGetByIdResponse) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{7}
}

func (x *LeaderboardGetByIdResponse) GetEntries() []*ChartEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type LeaderboardGetByScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intervals []*LeaderboardGetByScoreRequest_Interval `protobuf:"bytes,1,rep,name=intervals,proto3" json:"intervals,omitempty"`
	Options   *ChartOptions                            `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	Key       *ChartKey                                `protobuf:"bytes,11,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LeaderboardGetByScoreRequest) Reset() {
	*x = LeaderboardGetByScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardGetByScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardGetByScoreRequest) ProtoMessage() {}

func (x *LeaderboardGetByScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardGetByScoreRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardGetByScoreRequest) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{8}
}

func (x *LeaderboardGetByScoreRequest) GetIntervals() []*LeaderboardGetByScoreRequest_Interval {
	if x != nil {
		return x.Intervals
	}
	return nil
}

func (x *LeaderboardGetByScoreRequest) GetOptions() *ChartOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LeaderboardGetByScoreRequest) GetKey() *ChartKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type LeaderboardGetByScoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ChartEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *LeaderboardGetByScoreResponse) Reset() {
	*x = LeaderboardGetByScoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardGetByScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardGetByScoreResponse) ProtoMessage() {}

func (x *LeaderboardGetByScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardGetByScoreResponse.ProtoReflect.Descriptor instead.
func (*LeaderboardGetByScoreResponse) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{9}
}

func (x *LeaderboardGetByScoreResponse) GetEntries() []*ChartEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type LeaderboardRemoveByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids     []string      `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Options *ChartOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	Key     *ChartKey     `protobuf:"bytes,11,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LeaderboardRemoveByIdRequest) Reset() {
	*x = LeaderboardRemoveByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardRemoveByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardRemoveByIdRequest) ProtoMessage() {}

func (x *LeaderboardRemoveByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardRemoveByIdRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardRemoveByIdRequest) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{10}
}

func (x *LeaderboardRemoveByIdRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *LeaderboardRemoveByIdRequest) GetOptions() *ChartOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LeaderboardRemoveByIdRequest) GetKey() *ChartKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type LeaderboardRemoveByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaderboardRemoveByIdResponse) Reset() {
	*x = LeaderboardRemoveByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardRemoveByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardRemoveByIdResponse) ProtoMessage() {}

func (x *LeaderboardRemoveByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardRemoveByIdResponse.ProtoReflect.Descriptor instead.
func (*LeaderboardRemoveByIdResponse) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{11}
}

type LeaderboardTouchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *ChartOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	Key     *ChartKey     `protobuf:"bytes,11,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LeaderboardTouchRequest) Reset() {
	*x = LeaderboardTouchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardTouchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardTouchRequest) ProtoMessage() {}

func (x *LeaderboardTouchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardTouchRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardTouchRequest) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{12}
}

func (x *LeaderboardTouchRequest) GetOptions() *ChartOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LeaderboardTouchRequest) GetKey() *ChartKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type LeaderboardTouchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaderboardTouchResponse) Reset() {
	*x = LeaderboardTouchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardTouchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardTouchResponse) ProtoMessage() {}

func (x *LeaderboardTouchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardTouchResponse.ProtoReflect.Descriptor instead.
func (*LeaderboardTouchResponse) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{13}
}

// deprecated, will be removed later
type LeaderboardSetScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ChartEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Options *ChartOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	Key     *ChartKey     `protobuf:"bytes,11,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LeaderboardSetScoreRequest) Reset() {
	*x = LeaderboardSetScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardSetScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardSetScoreRequest) ProtoMessage() {}

func (x *LeaderboardSetScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardSetScoreRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardSetScoreRequest) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{14}
}

func (x *LeaderboardSetScoreRequest) GetEntries() []*ChartEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *LeaderboardSetScoreRequest) GetOptions() *ChartOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LeaderboardSetScoreRequest) GetKey() *ChartKey {
	if x != nil {
		return x.Key
	}
	return nil
}

// deprecated, will be removed later
type LeaderboardSetScoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaderboardSetScoreResponse) Reset() {
	*x = LeaderboardSetScoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardSetScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardSetScoreResponse) ProtoMessage() {}

func (x *LeaderboardSetScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardSetScoreResponse.ProtoReflect.Descriptor instead.
func (*LeaderboardSetScoreResponse) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{15}
}

// deprecated, will be removed later
type LeaderboardGetRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset  int32         `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Count   int32         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Options *ChartOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	Key     *ChartKey     `protobuf:"bytes,11,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LeaderboardGetRangeRequest) Reset() {
	*x = LeaderboardGetRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardGetRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardGetRangeRequest) ProtoMessage() {}

func (x *LeaderboardGetRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardGetRangeRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardGetRangeRequest) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{16}
}

func (x *LeaderboardGetRangeRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LeaderboardGetRangeRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LeaderboardGetRangeRequest) GetOptions() *ChartOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LeaderboardGetRangeRequest) GetKey() *ChartKey {
	if x != nil {
		return x.Key
	}
	return nil
}

// deprecated, will be removed later
type LeaderboardGetRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ChartEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *LeaderboardGetRangeResponse) Reset() {
	*x = LeaderboardGetRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardGetRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardGetRangeResponse) ProtoMessage() {}

func (x *LeaderboardGetRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardGetRangeResponse.ProtoReflect.Descriptor instead.
func (*LeaderboardGetRangeResponse) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{17}
}

func (x *LeaderboardGetRangeResponse) GetEntries() []*ChartEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type LeaderboardGetByScoreRequest_Interval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min   int64  `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max   int64  `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	Count uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *LeaderboardGetByScoreRequest_Interval) Reset() {
	*x = LeaderboardGetByScoreRequest_Interval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_libra_v1_leaderboard_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardGetByScoreRequest_Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardGetByScoreRequest_Interval) ProtoMessage() {}

func (x *LeaderboardGetByScoreRequest_Interval) ProtoReflect() protoreflect.Message {
	mi := &file_libra_v1_leaderboard_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardGetByScoreRequest_Interval.ProtoReflect.Descriptor instead.
func (*LeaderboardGetByScoreRequest_Interval) Descriptor() ([]byte, []int) {
	return file_libra_v1_leaderboard_proto_rawDescGZIP(), []int{8, 0}
}

func (x *LeaderboardGetByScoreRequest_Interval) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *LeaderboardGetByScoreRequest_Interval) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *LeaderboardGetByScoreRequest_Interval) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_libra_v1_leaderboard_proto protoreflect.FileDescriptor

var file_libra_v1_leaderboard_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x01, 0x0a,
	0x15, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x61,
	0x64, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x64,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x63, 0x72, 0x42, 0x79, 0x12, 0x30, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x48, 0x0a, 0x16, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xa3, 0x01,
	0x0a, 0x19, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xa3, 0x01, 0x0a, 0x1b, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x30, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x24, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x4e, 0x0a, 0x1c, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x19, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x4c, 0x0a, 0x1a, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x8b, 0x02,
	0x0a, 0x1c, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d,
	0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x30, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x24, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x44, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4f, 0x0a, 0x1d, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x88, 0x01, 0x0a,
	0x1c, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x30, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x24, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x1f, 0x0a, 0x1d, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x71, 0x0a, 0x17, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x1a, 0x0a, 0x18, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x1d,
	0x0a, 0x1b, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa2, 0x01,
	0x0a, 0x1a, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x4d, 0x0a, 0x1b, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x32, 0x93, 0x06, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x48, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x07, 0x53,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1f,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x23, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x26, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x12, 0x21,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x24, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x74, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_libra_v1_leaderboard_proto_rawDescOnce sync.Once
	file_libra_v1_leaderboard_proto_rawDescData = file_libra_v1_leaderboard_proto_rawDesc
)

func file_libra_v1_leaderboard_proto_rawDescGZIP() []byte {
	file_libra_v1_leaderboard_proto_rawDescOnce.Do(func() {
		file_libra_v1_leaderboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_libra_v1_leaderboard_proto_rawDescData)
	})
	return file_libra_v1_leaderboard_proto_rawDescData
}

var file_libra_v1_leaderboard_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_libra_v1_leaderboard_proto_goTypes = []interface{}{
	(*LeaderboardSetRequest)(nil),                 // 0: libra.v1.LeaderboardSetRequest
	(*LeaderboardSetResponse)(nil),                // 1: libra.v1.LeaderboardSetResponse
	(*LeaderboardSetInfoRequest)(nil),             // 2: libra.v1.LeaderboardSetInfoRequest
	(*LeaderboardSetInfoResponse)(nil),            // 3: libra.v1.LeaderboardSetInfoResponse
	(*LeaderboardGetByRankRequest)(nil),           // 4: libra.v1.LeaderboardGetByRankRequest
	(*LeaderboardGetByRankResponse)(nil),          // 5: libra.v1.LeaderboardGetByRankResponse
	(*LeaderboardGetByIdRequest)(nil),             // 6: libra.v1.LeaderboardGetByIdRequest
	(*LeaderboardGetByIdResponse)(nil),            // 7: libra.v1.LeaderboardGetByIdResponse
	(*LeaderboardGetByScoreRequest)(nil),          // 8: libra.v1.LeaderboardGetByScoreRequest
	(*LeaderboardGetByScoreResponse)(nil),         // 9: libra.v1.LeaderboardGetByScoreResponse
	(*LeaderboardRemoveByIdRequest)(nil),          // 10: libra.v1.LeaderboardRemoveByIdRequest
	(*LeaderboardRemoveByIdResponse)(nil),         // 11: libra.v1.LeaderboardRemoveByIdResponse
	(*LeaderboardTouchRequest)(nil),               // 12: libra.v1.LeaderboardTouchRequest
	(*LeaderboardTouchResponse)(nil),              // 13: libra.v1.LeaderboardTouchResponse
	(*LeaderboardSetScoreRequest)(nil),            // 14: libra.v1.LeaderboardSetScoreRequest
	(*LeaderboardSetScoreResponse)(nil),           // 15: libra.v1.LeaderboardSetScoreResponse
	(*LeaderboardGetRangeRequest)(nil),            // 16: libra.v1.LeaderboardGetRangeRequest
	(*LeaderboardGetRangeResponse)(nil),           // 17: libra.v1.LeaderboardGetRangeResponse
	(*LeaderboardGetByScoreRequest_Interval)(nil), // 18: libra.v1.LeaderboardGetByScoreRequest.Interval
	(*ChartEntry)(nil),                            // 19: libra.v1.ChartEntry
	(*ChartOptions)(nil),                          // 20: libra.v1.ChartOptions
	(*ChartKey)(nil),                              // 21: libra.v1.ChartKey
}
var file_libra_v1_leaderboard_proto_depIdxs = []int32{
	19, // 0: libra.v1.LeaderboardSetRequest.entries:type_name -> libra.v1.ChartEntry
	20, // 1: libra.v1.LeaderboardSetRequest.options:type_name -> libra.v1.ChartOptions
	21, // 2: libra.v1.LeaderboardSetRequest.key:type_name -> libra.v1.ChartKey
	19, // 3: libra.v1.LeaderboardSetResponse.entries:type_name -> libra.v1.ChartEntry
	19, // 4: libra.v1.LeaderboardSetInfoRequest.entries:type_name -> libra.v1.ChartEntry
	20, // 5: libra.v1.LeaderboardSetInfoRequest.options:type_name -> libra.v1.ChartOptions
	21, // 6: libra.v1.LeaderboardSetInfoRequest.key:type_name -> libra.v1.ChartKey
	20, // 7: libra.v1.LeaderboardGetByRankRequest.options:type_name -> libra.v1.ChartOptions
	21, // 8: libra.v1.LeaderboardGetByRankRequest.key:type_name -> libra.v1.ChartKey
	19, // 9: libra.v1.LeaderboardGetByRankResponse.entries:type_name -> libra.v1.ChartEntry
	20, // 10: libra.v1.LeaderboardGetByIdRequest.options:type_name -> libra.v1.ChartOptions
	21, // 11: libra.v1.LeaderboardGetByIdRequest.key:type_name -> libra.v1.ChartKey
	19, // 12: libra.v1.LeaderboardGetByIdResponse.entries:type_name -> libra.v1.ChartEntry
	18, // 13: libra.v1.LeaderboardGetByScoreRequest.intervals:type_name -> libra.v1.LeaderboardGetByScoreRequest.Interval
	20, // 14: libra.v1.LeaderboardGetByScoreRequest.options:type_name -> libra.v1.ChartOptions
	21, // 15: libra.v1.LeaderboardGetByScoreRequest.key:type_name -> libra.v1.ChartKey
	19, // 16: libra.v1.LeaderboardGetByScoreResponse.entries:type_name -> libra.v1.ChartEntry
	20, // 17: libra.v1.LeaderboardRemoveByIdRequest.options:type_name -> libra.v1.ChartOptions
	21, // 18: libra.v1.LeaderboardRemoveByIdRequest.key:type_name -> libra.v1.ChartKey
	20, // 19: libra.v1.LeaderboardTouchRequest.options:type_name -> libra.v1.ChartOptions
	21, // 20: libra.v1.LeaderboardTouchRequest.key:type_name -> libra.v1.ChartKey
	19, // 21: libra.v1.LeaderboardSetScoreRequest.entries:type_name -> libra.v1.ChartEntry
	20, // 22: libra.v1.LeaderboardSetScoreRequest.options:type_name -> libra.v1.ChartOptions
	21, // 23: libra.v1.LeaderboardSetScoreRequest.key:type_name -> libra.v1.ChartKey
	20, // 24: libra.v1.LeaderboardGetRangeRequest.options:type_name -> libra.v1.ChartOptions
	21, // 25: libra.v1.LeaderboardGetRangeRequest.key:type_name -> libra.v1.ChartKey
	19, // 26: libra.v1.LeaderboardGetRangeResponse.entries:type_name -> libra.v1.ChartEntry
	0,  // 27: libra.v1.Leaderboard.Set:input_type -> libra.v1.LeaderboardSetRequest
	2,  // 28: libra.v1.Leaderboard.SetInfo:input_type -> libra.v1.LeaderboardSetInfoRequest
	0,  // 29: libra.v1.Leaderboard.GetByRank:input_type -> libra.v1.LeaderboardSetRequest
	6,  // 30: libra.v1.Leaderboard.GetById:input_type -> libra.v1.LeaderboardGetByIdRequest
	8,  // 31: libra.v1.Leaderboard.GetByScore:input_type -> libra.v1.LeaderboardGetByScoreRequest
	10, // 32: libra.v1.Leaderboard.RemoveById:input_type -> libra.v1.LeaderboardRemoveByIdRequest
	12, // 33: libra.v1.Leaderboard.Touch:input_type -> libra.v1.LeaderboardTouchRequest
	14, // 34: libra.v1.Leaderboard.SetScore:input_type -> libra.v1.LeaderboardSetScoreRequest
	16, // 35: libra.v1.Leaderboard.GetRange:input_type -> libra.v1.LeaderboardGetRangeRequest
	1,  // 36: libra.v1.Leaderboard.Set:output_type -> libra.v1.LeaderboardSetResponse
	3,  // 37: libra.v1.Leaderboard.SetInfo:output_type -> libra.v1.LeaderboardSetInfoResponse
	1,  // 38: libra.v1.Leaderboard.GetByRank:output_type -> libra.v1.LeaderboardSetResponse
	7,  // 39: libra.v1.Leaderboard.GetById:output_type -> libra.v1.LeaderboardGetByIdResponse
	9,  // 40: libra.v1.Leaderboard.GetByScore:output_type -> libra.v1.LeaderboardGetByScoreResponse
	11, // 41: libra.v1.Leaderboard.RemoveById:output_type -> libra.v1.LeaderboardRemoveByIdResponse
	13, // 42: libra.v1.Leaderboard.Touch:output_type -> libra.v1.LeaderboardTouchResponse
	15, // 43: libra.v1.Leaderboard.SetScore:output_type -> libra.v1.LeaderboardSetScoreResponse
	17, // 44: libra.v1.Leaderboard.GetRange:output_type -> libra.v1.LeaderboardGetRangeResponse
	36, // [36:45] is the sub-list for method output_type
	27, // [27:36] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_libra_v1_leaderboard_proto_init() }
func file_libra_v1_leaderboard_proto_init() {
	if File_libra_v1_leaderboard_proto != nil {
		return
	}
	file_libra_v1_chart_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_libra_v1_leaderboard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardSetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardSetInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardGetByRankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardGetByRankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardGetByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardGetByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardGetByScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardGetByScoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardRemoveByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardRemoveByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardTouchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardTouchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardSetScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardSetScoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardGetRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardGetRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_libra_v1_leaderboard_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardGetByScoreRequest_Interval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_libra_v1_leaderboard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_libra_v1_leaderboard_proto_goTypes,
		DependencyIndexes: file_libra_v1_leaderboard_proto_depIdxs,
		MessageInfos:      file_libra_v1_leaderboard_proto_msgTypes,
	}.Build()
	File_libra_v1_leaderboard_proto = out.File
	file_libra_v1_leaderboard_proto_rawDesc = nil
	file_libra_v1_leaderboard_proto_goTypes = nil
	file_libra_v1_leaderboard_proto_depIdxs = nil
}
