// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: db/v1/db.proto

package dbapi_v1

import (
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RegisterSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// proto file descriptor set
	DescriptorSet *descriptor.FileDescriptorSet `protobuf:"bytes,1,opt,name=descriptor_set,json=descriptorSet,proto3" json:"descriptor_set,omitempty"`
	// proto message name
	MessageName string `protobuf:"bytes,2,opt,name=message_name,json=messageName,proto3" json:"message_name,omitempty"`
}

func (x *RegisterSchemaRequest) Reset() {
	*x = RegisterSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_v1_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSchemaRequest) ProtoMessage() {}

func (x *RegisterSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_v1_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSchemaRequest.ProtoReflect.Descriptor instead.
func (*RegisterSchemaRequest) Descriptor() ([]byte, []int) {
	return file_db_v1_db_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterSchemaRequest) GetDescriptorSet() *descriptor.FileDescriptorSet {
	if x != nil {
		return x.DescriptorSet
	}
	return nil
}

func (x *RegisterSchemaRequest) GetMessageName() string {
	if x != nil {
		return x.MessageName
	}
	return ""
}

type RegisterSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for registered proto
	Schema string `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *RegisterSchemaResponse) Reset() {
	*x = RegisterSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_v1_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSchemaResponse) ProtoMessage() {}

func (x *RegisterSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_v1_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSchemaResponse.ProtoReflect.Descriptor instead.
func (*RegisterSchemaResponse) Descriptor() ([]byte, []int) {
	return file_db_v1_db_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterSchemaResponse) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

// All methods work around archive, so that all request and response could be the same
type ArchiveGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AddIfNotFound *Archive `protobuf:"bytes,2,opt,name=add_if_not_found,json=addIfNotFound,proto3" json:"add_if_not_found,omitempty"`
	//string  token = 10;
	WithLock bool `protobuf:"varint,11,opt,name=with_lock,json=withLock,proto3" json:"with_lock,omitempty"`
}

func (x *ArchiveGetRequest) Reset() {
	*x = ArchiveGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_v1_db_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveGetRequest) ProtoMessage() {}

func (x *ArchiveGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_v1_db_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveGetRequest.ProtoReflect.Descriptor instead.
func (*ArchiveGetRequest) Descriptor() ([]byte, []int) {
	return file_db_v1_db_proto_rawDescGZIP(), []int{2}
}

func (x *ArchiveGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ArchiveGetRequest) GetAddIfNotFound() *Archive {
	if x != nil {
		return x.AddIfNotFound
	}
	return nil
}

func (x *ArchiveGetRequest) GetWithLock() bool {
	if x != nil {
		return x.WithLock
	}
	return false
}

type ArchiveGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Archive *Archive `protobuf:"bytes,1,opt,name=archive,proto3" json:"archive,omitempty"`
	Token   string   `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ArchiveGetResponse) Reset() {
	*x = ArchiveGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_v1_db_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveGetResponse) ProtoMessage() {}

func (x *ArchiveGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_v1_db_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveGetResponse.ProtoReflect.Descriptor instead.
func (*ArchiveGetResponse) Descriptor() ([]byte, []int) {
	return file_db_v1_db_proto_rawDescGZIP(), []int{3}
}

func (x *ArchiveGetResponse) GetArchive() *Archive {
	if x != nil {
		return x.Archive
	}
	return nil
}

func (x *ArchiveGetResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ArchiveSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Archive    *Archive `protobuf:"bytes,1,opt,name=archive,proto3" json:"archive,omitempty"`
	Token      string   `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`
	WithUnlock bool     `protobuf:"varint,11,opt,name=with_unlock,json=withUnlock,proto3" json:"with_unlock,omitempty"`
}

func (x *ArchiveSetRequest) Reset() {
	*x = ArchiveSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_v1_db_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveSetRequest) ProtoMessage() {}

func (x *ArchiveSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_v1_db_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveSetRequest.ProtoReflect.Descriptor instead.
func (*ArchiveSetRequest) Descriptor() ([]byte, []int) {
	return file_db_v1_db_proto_rawDescGZIP(), []int{4}
}

func (x *ArchiveSetRequest) GetArchive() *Archive {
	if x != nil {
		return x.Archive
	}
	return nil
}

func (x *ArchiveSetRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ArchiveSetRequest) GetWithUnlock() bool {
	if x != nil {
		return x.WithUnlock
	}
	return false
}

type ArchiveSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Archive *Archive `protobuf:"bytes,1,opt,name=archive,proto3" json:"archive,omitempty"`
}

func (x *ArchiveSetResponse) Reset() {
	*x = ArchiveSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_v1_db_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveSetResponse) ProtoMessage() {}

func (x *ArchiveSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_v1_db_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveSetResponse.ProtoReflect.Descriptor instead.
func (*ArchiveSetResponse) Descriptor() ([]byte, []int) {
	return file_db_v1_db_proto_rawDescGZIP(), []int{5}
}

func (x *ArchiveSetResponse) GetArchive() *Archive {
	if x != nil {
		return x.Archive
	}
	return nil
}

var File_db_v1_db_proto protoreflect.FileDescriptor

var file_db_v1_db_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x1a, 0x13, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x49, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x52, 0x0d, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x30, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x5f, 0x69,
	0x66, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x49,
	0x66, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x74,
	0x68, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69,
	0x74, 0x68, 0x4c, 0x6f, 0x63, 0x6b, 0x22, 0x5d, 0x0a, 0x12, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7d, 0x0a, 0x11, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x47, 0x0a, 0x12, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x32, 0x83, 0x06,
	0x0a, 0x02, 0x44, 0x42, 0x12, 0x61, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x25, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64,
	0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12,
	0x21, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x21, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x21, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a,
	0x53, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x21, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x51, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x21, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x21, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64,
	0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x0b, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2e, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6e, 0x74, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x2d, 0x67, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x62, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x62,
	0x61, 0x70, 0x69, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_db_v1_db_proto_rawDescOnce sync.Once
	file_db_v1_db_proto_rawDescData = file_db_v1_db_proto_rawDesc
)

func file_db_v1_db_proto_rawDescGZIP() []byte {
	file_db_v1_db_proto_rawDescOnce.Do(func() {
		file_db_v1_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_db_v1_db_proto_rawDescData)
	})
	return file_db_v1_db_proto_rawDescData
}

var file_db_v1_db_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_db_v1_db_proto_goTypes = []interface{}{
	(*RegisterSchemaRequest)(nil),        // 0: libra.dbapi.v1.RegisterSchemaRequest
	(*RegisterSchemaResponse)(nil),       // 1: libra.dbapi.v1.RegisterSchemaResponse
	(*ArchiveGetRequest)(nil),            // 2: libra.dbapi.v1.ArchiveGetRequest
	(*ArchiveGetResponse)(nil),           // 3: libra.dbapi.v1.ArchiveGetResponse
	(*ArchiveSetRequest)(nil),            // 4: libra.dbapi.v1.ArchiveSetRequest
	(*ArchiveSetResponse)(nil),           // 5: libra.dbapi.v1.ArchiveSetResponse
	(*descriptor.FileDescriptorSet)(nil), // 6: google.protobuf.FileDescriptorSet
	(*Archive)(nil),                      // 7: libra.dbapi.v1.Archive
}
var file_db_v1_db_proto_depIdxs = []int32{
	6,  // 0: libra.dbapi.v1.RegisterSchemaRequest.descriptor_set:type_name -> google.protobuf.FileDescriptorSet
	7,  // 1: libra.dbapi.v1.ArchiveGetRequest.add_if_not_found:type_name -> libra.dbapi.v1.Archive
	7,  // 2: libra.dbapi.v1.ArchiveGetResponse.archive:type_name -> libra.dbapi.v1.Archive
	7,  // 3: libra.dbapi.v1.ArchiveSetRequest.archive:type_name -> libra.dbapi.v1.Archive
	7,  // 4: libra.dbapi.v1.ArchiveSetResponse.archive:type_name -> libra.dbapi.v1.Archive
	0,  // 5: libra.dbapi.v1.DB.RegisterSchema:input_type -> libra.dbapi.v1.RegisterSchemaRequest
	2,  // 6: libra.dbapi.v1.DB.Lock:input_type -> libra.dbapi.v1.ArchiveGetRequest
	4,  // 7: libra.dbapi.v1.DB.Unlock:input_type -> libra.dbapi.v1.ArchiveSetRequest
	2,  // 8: libra.dbapi.v1.DB.GetArchive:input_type -> libra.dbapi.v1.ArchiveGetRequest
	4,  // 9: libra.dbapi.v1.DB.SetArchive:input_type -> libra.dbapi.v1.ArchiveSetRequest
	2,  // 10: libra.dbapi.v1.DB.GetModel:input_type -> libra.dbapi.v1.ArchiveGetRequest
	4,  // 11: libra.dbapi.v1.DB.SetModel:input_type -> libra.dbapi.v1.ArchiveSetRequest
	2,  // 12: libra.dbapi.v1.DB.GetMetadata:input_type -> libra.dbapi.v1.ArchiveGetRequest
	4,  // 13: libra.dbapi.v1.DB.SetMetadata:input_type -> libra.dbapi.v1.ArchiveSetRequest
	1,  // 14: libra.dbapi.v1.DB.RegisterSchema:output_type -> libra.dbapi.v1.RegisterSchemaResponse
	3,  // 15: libra.dbapi.v1.DB.Lock:output_type -> libra.dbapi.v1.ArchiveGetResponse
	5,  // 16: libra.dbapi.v1.DB.Unlock:output_type -> libra.dbapi.v1.ArchiveSetResponse
	3,  // 17: libra.dbapi.v1.DB.GetArchive:output_type -> libra.dbapi.v1.ArchiveGetResponse
	5,  // 18: libra.dbapi.v1.DB.SetArchive:output_type -> libra.dbapi.v1.ArchiveSetResponse
	3,  // 19: libra.dbapi.v1.DB.GetModel:output_type -> libra.dbapi.v1.ArchiveGetResponse
	5,  // 20: libra.dbapi.v1.DB.SetModel:output_type -> libra.dbapi.v1.ArchiveSetResponse
	3,  // 21: libra.dbapi.v1.DB.GetMetadata:output_type -> libra.dbapi.v1.ArchiveGetResponse
	5,  // 22: libra.dbapi.v1.DB.SetMetadata:output_type -> libra.dbapi.v1.ArchiveSetResponse
	14, // [14:23] is the sub-list for method output_type
	5,  // [5:14] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_db_v1_db_proto_init() }
func file_db_v1_db_proto_init() {
	if File_db_v1_db_proto != nil {
		return
	}
	file_db_v1_archive_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_db_v1_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_v1_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_v1_db_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_v1_db_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_v1_db_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_v1_db_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_db_v1_db_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_db_v1_db_proto_goTypes,
		DependencyIndexes: file_db_v1_db_proto_depIdxs,
		MessageInfos:      file_db_v1_db_proto_msgTypes,
	}.Build()
	File_db_v1_db_proto = out.File
	file_db_v1_db_proto_rawDesc = nil
	file_db_v1_db_proto_goTypes = nil
	file_db_v1_db_proto_depIdxs = nil
}
